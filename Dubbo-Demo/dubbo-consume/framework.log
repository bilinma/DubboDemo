2018-01-31 16:34:59,581 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 16:34:59,690 INFO [com.alibaba.dubbo.main.Main] - Use container type([spring]) to run dubbo serivce.
2018-01-31 16:35:03,361 ERROR [com.alibaba.dubbo.main.Main] - Invalid bean definition with name 'dataSource' defined in file [D:\Github_Repo\DubboDemo\Dubbo-Demo\Dubbo-Provider\target\classes\META-INF\spring\applicationContext-druid.xml]: Could not resolve placeholder 'jdbc.jdbcUrl' in value "${jdbc.jdbcUrl}"; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'jdbc.jdbcUrl' in value "${jdbc.jdbcUrl}"
org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'dataSource' defined in file [D:\Github_Repo\DubboDemo\Dubbo-Demo\Dubbo-Provider\target\classes\META-INF\spring\applicationContext-druid.xml]: Could not resolve placeholder 'jdbc.jdbcUrl' in value "${jdbc.jdbcUrl}"; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'jdbc.jdbcUrl' in value "${jdbc.jdbcUrl}"
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:223)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:152)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:281)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:161)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.alibaba.dubbo.container.spring.SpringContainer.start(SpringContainer.java:50)
	at com.alibaba.dubbo.main.Main.main(Main.java:59)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'jdbc.jdbcUrl' in value "${jdbc.jdbcUrl}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:204)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:220)
	... 10 more
2018-01-31 16:37:17,734 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 16:37:18,318 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:18,659 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:18,699 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:18,995 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:19,136 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:19,230 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:19,267 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 16:37:19,285 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,287 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,288 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,288 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,289 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,291 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,296 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,297 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,342 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,734 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:19,756 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,291 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x3a23c4bc, /10.100.106.70:53755 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,291 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,492 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,530 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,562 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,699 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:20,709 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.StudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=8252&side=consumer&timestamp=1517387838805, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:37:21,288 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 16:38:37,164 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:18,359 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 17:40:18,988 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:19,467 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:19,581 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:19,918 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:20,003 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:20,077 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:20,111 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:40:20,142 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,176 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,179 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,180 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,180 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,182 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,259 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10456&side=provider&timestamp=1517391520348 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,261 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10456&side=provider&timestamp=1517391520348], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,344 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,740 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:20,759 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,030 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0xbdf5ed46, /10.100.106.70:54220 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,031 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,131 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,151 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,199 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,231 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10456&side=provider&timestamp=1517391520348], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,250 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:40:21,765 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:41:41,042 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:42:41,055 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:43:41,060 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:44:41,063 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:45:41,068 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:45:47,902 INFO [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] -  [DUBBO] disconected from /10.100.106.70:20880,url:dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:45:50,402 WARN [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] client reconnect to 10.100.106.70:20880 find error . url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738, dubbo version: 2.5.3, current host: 10.100.106.70
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6548&side=consumer&timestamp=1517391619738) failed to connect to server /10.100.106.70:20880, error message is:connection timed out: /10.100.106.70:20880
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:280)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:145)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.jboss.netty.channel.ConnectTimeoutException: connection timed out: /10.100.106.70:20880
	at org.jboss.netty.channel.socket.nio.NioClientBoss.processConnectTimeout(NioClientBoss.java:137)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:83)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	... 3 more
2018-01-31 17:51:37,237 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 17:51:37,842 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,309 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,348 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,768 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,833 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10456&side=provider&timestamp=1517391520348, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,918 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,937 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:51:38,961 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:38,965 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:38,968 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:38,980 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:38,981 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:38,981 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,018 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3928&side=provider&timestamp=1517392281928 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,019 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3928&side=provider&timestamp=1517392281928], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,088 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,590 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,611 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,939 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0xccec5010, /10.100.106.70:54445 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:39,939 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,030 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,054 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,077 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,139 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3928&side=provider&timestamp=1517392281928], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,147 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:51:40,640 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:53:22,743 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:54:22,761 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:55:22,770 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:55:52,941 INFO [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] -  [DUBBO] disconected from /10.100.106.70:20880,url:dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:55:55,289 WARN [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] client reconnect to 10.100.106.70:20880 find error . url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569, dubbo version: 2.5.3, current host: 10.100.106.70
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4012&side=consumer&timestamp=1517392298569) failed to connect to server /10.100.106.70:20880, error message is:Connection refused: no further information: /10.100.106.70:20880
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:280)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:145)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.net.ConnectException: Connection refused: no further information: /10.100.106.70:20880
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:150)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)
	... 3 more
2018-01-31 17:56:53,013 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 17:56:53,578 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:53,857 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:53,930 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:54,375 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:54,450 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3928&side=provider&timestamp=1517392281928, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:54,513 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:54,544 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 17:56:54,598 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,599 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,600 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,600 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,600 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,600 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,611 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4220&side=provider&timestamp=1517392604604 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,612 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4220&side=provider&timestamp=1517392604604], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,671 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,870 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:54,887 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,164 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x835ef9ac, /10.100.106.70:54499 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,165 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,233 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,249 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,266 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,314 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4220&side=provider&timestamp=1517392604604], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,324 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:56:55,712 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:58:45,260 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:58:54,025 INFO [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] -  [DUBBO] disconected from /10.100.106.70:20880,url:dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 17:58:56,226 WARN [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] client reconnect to 10.100.106.70:20880 find error . url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062, dubbo version: 2.5.3, current host: 10.100.106.70
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=3900&side=consumer&timestamp=1517392614062) failed to connect to server /10.100.106.70:20880, error message is:Connection refused: no further information: /10.100.106.70:20880
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:280)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:145)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.net.ConnectException: Connection refused: no further information: /10.100.106.70:20880
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:150)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)
	... 3 more
2018-01-31 18:09:02,835 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 18:09:03,338 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:03,613 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:03,661 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:04,019 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:04,065 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4220&side=provider&timestamp=1517392604604, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:04,134 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:04,153 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:09:04,172 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,175 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,177 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,178 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,180 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,181 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,185 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=2700&side=provider&timestamp=1517393332365 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,186 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=2700&side=provider&timestamp=1517393332365], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,233 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,449 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,468 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,652 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x0cf7e621, /10.100.106.70:54795 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,652 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,713 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,736 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,754 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,793 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=2700&side=provider&timestamp=1517393332365], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:04,800 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:06,364 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:06,365 WARN [com.alibaba.dubbo.remoting.exchange.support.DefaultFuture] -  [DUBBO] The timeout response finally returned at 2018-01-31 18:09:06.365, response Response [id=0, version=null, status=20, event=false, error=null, result=RpcResult [result=null, exception=java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
### The error may exist in com/alibaba/dubbo/demo/dao/IStudentMapper.java (best guess)
### The error may involve com.alibaba.dubbo.demo.dao.IStudentMapper.selectOne-Inline
### The error occurred while setting parameters
### SQL: SELECT id,name,age,address  FROM student  WHERE  id = ? AND age = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
### The error may exist in com/alibaba/dubbo/demo/dao/IStudentMapper.java (best guess)
### The error may involve com.alibaba.dubbo.demo.dao.IStudentMapper.selectOne-Inline
### The error occurred while setting parameters
### SQL: SELECT id,name,age,address  FROM student  WHERE  id = ? AND age = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy19.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy23.selectOne(Unknown Source)
	at com.alibaba.dubbo.demo.service.StudentServiceImpl.queryStudentById(StudentServiceImpl.java:28)
	at com.alibaba.dubbo.demo.service.StudentServiceImpl$$FastClassBySpringCGLIB$$d552996f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.alibaba.dubbo.demo.service.StudentServiceImpl$$EnhancerBySpringCGLIB$$bd3d7d3b.queryStudentById(<generated>)
	at com.alibaba.dubbo.common.bytecode.Wrapper0.invokeMethod(Wrapper0.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:71)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:98)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'jeecg.student' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy32.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:142)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy30.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 45 more
]], channel: /10.100.106.70:54795 -> /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:06,392 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:09:06,394 WARN [com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker] -  [DUBBO] Although retry the method queryStudentById in the service com.alibaba.dubbo.demo.service.IStudentService was successful by the provider 10.100.106.70:20880, but there have been failed providers [10.100.106.70:20880] (1/1) from the registry 224.5.6.7:1234 on the consumer 10.100.106.70 using the dubbo version 2.5.3. Last error is: Invoke remote method timeout. method: queryStudentById, provider: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, cause: Waiting server-side response timeout by scan timer. start time: 2018-01-31 18:09:04.841, end time: 2018-01-31 18:09:05.859, client elapsed: 74 ms, server elapsed: 939 ms, timeout: 1000 ms, request: Request [id=0, version=2.0.0, twoway=true, event=false, broken=false, data=RpcInvocation [methodName=queryStudentById, parameterTypes=[int], arguments=[1], attachments={path=com.alibaba.dubbo.demo.service.IStudentService, interface=com.alibaba.dubbo.demo.service.IStudentService, version=0.0.0}]], channel: /10.100.106.70:54795 -> /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
com.alibaba.dubbo.rpc.RpcException: Invoke remote method timeout. method: queryStudentById, provider: dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=4212&side=consumer&timestamp=1517393343832, cause: Waiting server-side response timeout by scan timer. start time: 2018-01-31 18:09:04.841, end time: 2018-01-31 18:09:05.859, client elapsed: 74 ms, server elapsed: 939 ms, timeout: 1000 ms, request: Request [id=0, version=2.0.0, twoway=true, event=false, broken=false, data=RpcInvocation [methodName=queryStudentById, parameterTypes=[int], arguments=[1], attachments={path=com.alibaba.dubbo.demo.service.IStudentService, interface=com.alibaba.dubbo.demo.service.IStudentService, version=0.0.0}]], channel: /10.100.106.70:54795 -> /10.100.106.70:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:99)
	at com.alibaba.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:144)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:48)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:74)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:77)
	at com.alibaba.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:227)
	at com.alibaba.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:72)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy0.queryStudentById(proxy0.java)
	at com.alibaba.dubbo.demo.Consumer.main(Consumer.java:14)
Caused by: com.alibaba.dubbo.remoting.TimeoutException: Waiting server-side response timeout by scan timer. start time: 2018-01-31 18:09:04.841, end time: 2018-01-31 18:09:05.859, client elapsed: 74 ms, server elapsed: 939 ms, timeout: 1000 ms, request: Request [id=0, version=2.0.0, twoway=true, event=false, broken=false, data=RpcInvocation [methodName=queryStudentById, parameterTypes=[int], arguments=[1], attachments={path=com.alibaba.dubbo.demo.service.IStudentService, interface=com.alibaba.dubbo.demo.service.IStudentService, version=0.0.0}]], channel: /10.100.106.70:54795 -> /10.100.106.70:20880
	at com.alibaba.dubbo.remoting.exchange.support.DefaultFuture.returnFromResponse(DefaultFuture.java:188)
	at com.alibaba.dubbo.remoting.exchange.support.DefaultFuture.get(DefaultFuture.java:110)
	at com.alibaba.dubbo.remoting.exchange.support.DefaultFuture.get(DefaultFuture.java:84)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:96)
	... 15 more
2018-01-31 18:10:56,967 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 18:10:57,379 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:57,564 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:57,605 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:57,842 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:57,881 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=2700&side=provider&timestamp=1517393332365, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:58,009 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:58,040 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:10:58,057 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,058 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,060 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,060 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,060 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,061 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,083 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10576&side=provider&timestamp=1517393448748 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,084 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10576&side=provider&timestamp=1517393448748], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,118 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,351 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,371 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,537 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x7254d464, /10.100.106.70:54825 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,537 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,595 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,613 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,630 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,651 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10576&side=provider&timestamp=1517393448748], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:58,656 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:10:59,708 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:12:49,673 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:13:49,701 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:14:49,708 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:15:49,713 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:16:49,719 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:17:49,722 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:18:49,738 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:19:49,743 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:20:49,751 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:21,904 INFO [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] -  [DUBBO] disconected from /10.100.106.70:20880,url:dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.0&generic=false&heartbeat=60000&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=8724&side=consumer&timestamp=1517393457741, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:41,456 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 18:21:41,827 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,057 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,097 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,479 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,542 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=10576&side=provider&timestamp=1517393448748, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,637 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,659 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:21:42,672 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,673 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,677 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,677 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,677 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,678 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,686 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,687 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,727 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,892 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:42,914 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,162 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x73811052, /10.100.106.70:54881 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,162 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,202 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,221 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,235 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,256 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:43,261 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=6200&side=consumer&timestamp=1517394102322, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:21:44,087 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:05,020 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 18:22:05,434 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:05,650 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:05,791 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:06,239 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:06,338 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:06,438 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:06,458 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 18:22:06,475 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,476 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,477 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,481 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,481 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,484 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,484 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,485 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,517 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,757 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,776 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,995 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x79cf9ca6, /10.100.106.70:54896 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:06,996 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,053 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,070 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,087 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,126 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.IStudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,134 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.IStudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=7400&side=consumer&timestamp=1517394125921, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 18:22:07,339 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:42,766 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-01-31 19:01:43,287 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:43,589 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:43,629 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:43,886 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:44,011 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Load registry store file D:\Users\xiaobin.ma\.dubbo\dubbo-registry-224.5.6.7.cache, data: {com.alibaba.dubbo.demo.DemoService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7076&side=provider&timestamp=1516961846084, com.alibaba.dubbo.demo.service.IStudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.IStudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.IStudentService&methods=sayHello,queryStudentById&pid=5612&side=provider&timestamp=1517394095762, com.alibaba.dubbo.demo.service.StudentService=dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=demo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello&pid=312&side=provider&timestamp=1517387436239}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:44,056 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:44,074 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-01-31 19:01:44,100 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Register: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,102 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,103 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=consumers&check=false&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,103 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Subscribe: consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,104 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Send broadcast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777 to /224.5.6.7:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,105 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: subscribe consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,113 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Receive multicast message: register dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=dubbo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=7188&side=provider&timestamp=1517396482675 from /10.100.106.70:1234, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,115 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=dubbo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=7188&side=provider&timestamp=1517396482675], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,158 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,468 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,487 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,676 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Successed connect to server /10.100.106.70:20880 from NettyClient 10.100.106.70 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0xa02d7276, /10.100.106.70:55785 => /10.100.106.70:20880]], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,677 INFO [com.alibaba.dubbo.remoting.transport.AbstractClient] -  [DUBBO] Start NettyClient bangong-0070/10.100.106.70 connect to the server /10.100.106.70:20880, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,730 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,744 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,769 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,790 INFO [com.alibaba.dubbo.registry.multicast.MulticastRegistry] -  [DUBBO] Notify urls for subscribe url consumer://10.100.106.70/com.alibaba.dubbo.demo.service.StudentService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777, urls: [dubbo://10.100.106.70:20880/com.alibaba.dubbo.demo.service.StudentService?anyhost=true&application=dubbo-provider&dubbo=2.6.0&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=7188&side=provider&timestamp=1517396482675], dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:44,808 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Refer dubbo service com.alibaba.dubbo.demo.service.StudentService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.5.3&generic=false&interface=com.alibaba.dubbo.demo.service.StudentService&methods=sayHello,queryStudentById&pid=10132&side=consumer&timestamp=1517396503777, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:01:45,719 DEBUG [com.alibaba.dubbo.remoting.transport.DecodeHandler] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:03:23,573 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
2018-01-31 19:04:23,600 DEBUG [com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] -  [DUBBO] Received heartbeat from remote channel /10.100.106.70:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.100.106.70
